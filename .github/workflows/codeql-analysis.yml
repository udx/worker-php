name: "CodeQL and Linter Analysis"

on:
  push:

jobs:
  analyze:
    name: Analyze PHP and NGINX
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["php"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initialize the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # Add any additional queries youâ€™d like to run
          queries: +security-extended, +performance, +maintainability

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # Scan all NGINX configuration files
      - name: Scan NGINX Configurations
        run: |
          sudo apt-get update
          sudo apt-get install -y nginx
          find src/configs/nginx -name '*.conf' -exec nginx -t -c {} \;

      # Run the CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "security"

  analyze-shell:
    name: Analyze Shell Scripts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ShellCheck
        run: sudo apt-get install -y shellcheck

      - name: Run ShellCheck
        run: |
          find . -name '*.sh' -print0 | xargs -0 shellcheck

  analyze-dockerfile:
    name: Analyze Dockerfiles
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install hadolint
        run: |
          wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 && chmod +x /usr/local/bin/hadolint

      - name: Run hadolint
        run: |
          find . -name 'Dockerfile' -print0 | xargs -0 /usr/local/bin/hadolint

  analyze-yaml:
    name: Analyze YAML Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yamllint
        run: |
          pip install yamllint

      - name: Find YAML files and run yamllint if they exist
        run: |
          yaml_files=$(find . -name '*.yml' -o -name '*.yaml')
          if [ -n "$yaml_files" ]; then
          echo "$yaml_files" | xargs yamllint
          else
          echo "No YAML files found, skipping linting."
          fi
